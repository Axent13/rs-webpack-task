{"version":3,"file":"main.3becfc636ccbfc209d18.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/global","webpack:///webpack/runtime/publicPath","webpack:///./assets/sounds/summer.mp3","webpack:///./assets/sounds/rain.mp3","webpack:///./assets/sounds/winter.mp3","webpack:///./weatherApp.js","webpack:///./index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export default __webpack_public_path__ + \"ba837e3ecc073286cbc4b9d797bbd762.mp3\";","export default __webpack_public_path__ + \"b7ee8a84e7ecf1112c277ea4ef4a91eb.mp3\";","export default __webpack_public_path__ + \"24f5c09b90641ef35477fed9b0f10650.mp3\";","class WeatherApp {\n  #audioButtons;\n  #$backgroundElement;\n  #$volumeRootElement;\n\n  constructor(options) {\n    this.#$backgroundElement = options.$backgroundElement;\n    this.#audioButtons = [];\n    this.#$volumeRootElement = options.$volumeRootElement;\n\n    options.audioButtons.forEach((option) => {\n      this.#audioButtons.push({\n        $DOMElement: option.$DOMElement,\n        audio: new Audio(option.audioFile),\n        bgClassName: option.bgClassName,\n        isPlaying: false,\n      });\n    });\n\n    this._initAudioButtonsClicks();\n    this._initVolumeControl();\n  }\n\n  _removeAllBgButtonClasses() {\n    console.log(\n      this.#audioButtons.map((audioButton) => audioButton.bgClassName)\n    );\n    this.#$backgroundElement.classList.remove(\n      ...this.#audioButtons.map((audioButton) => audioButton.bgClassName)\n    );\n  }\n\n  _initAudioButtonsClicks() {\n    this.#audioButtons.forEach((currentButton) => {\n      currentButton.$DOMElement.addEventListener(\"click\", () => {\n        this._removeAllBgButtonClasses();\n        this.#$backgroundElement.classList.add(currentButton.bgClassName);\n\n        if (currentButton.isPlaying) {\n          currentButton.$DOMElement.classList.add(\"paused\");\n          currentButton.audio.pause();\n          currentButton.isPlaying = false;\n        } else {\n          currentButton.$DOMElement.classList.remove(\"paused\");\n          this.#audioButtons\n            .filter((audioButton) => audioButton !== currentButton)\n            .forEach((otherButton) => {\n              otherButton.audio.pause();\n              otherButton.isPlaying = false;\n              otherButton.$DOMElement.classList.remove(\"paused\");\n            });\n\n          currentButton.audio.play();\n          currentButton.isPlaying = true;\n        }\n      });\n      currentButton.audio.volume = 0.5;\n    });\n  }\n\n  _changeAudiosVolume(newVolume) {\n    this.#audioButtons.forEach(\n      (currentButton) => (currentButton.audio.volume = newVolume)\n    );\n  }\n\n  _initVolumeControl() {\n    const $volumeElement = this.#$volumeRootElement.querySelector(\".volume\");\n    const $volumeFilled = this.#$volumeRootElement.querySelector(\n      \".volume__filled-part\"\n    );\n    const $thumbElement =\n      this.#$volumeRootElement.querySelector(\".volume__thumb\");\n    const $volumeValueElement =\n      this.#$volumeRootElement.querySelector(\".volume__value\");\n\n    $volumeValueElement.innerText = \"50 %\";\n\n    $volumeElement.onmouseenter = () => {\n      $volumeValueElement.classList.remove(\"volume__value_hidden\");\n    };\n\n    $volumeElement.onmouseleave = () => {\n      $volumeValueElement.classList.add(\"volume__value_hidden\");\n    };\n\n    $thumbElement.onmousedown = (event) => {\n      event.preventDefault();\n\n      let shiftX = event.clientX - $thumbElement.getBoundingClientRect().left;\n\n      const onMouseMove = (event) => {\n        let newLeft =\n          event.clientX - shiftX - $volumeElement.getBoundingClientRect().left;\n        if (newLeft < 0) {\n          newLeft = 0;\n        }\n\n        let rightEdge = $volumeElement.offsetWidth - $thumbElement.offsetWidth;\n        if (newLeft > rightEdge) {\n          newLeft = rightEdge;\n        }\n\n        $thumbElement.style.left = newLeft + \"px\";\n        $volumeFilled.style.right =\n          $volumeElement.offsetWidth -\n          $thumbElement.offsetWidth -\n          newLeft +\n          \"px\";\n\n        const volumeValueRatio =\n          newLeft / ($volumeElement.offsetWidth - $thumbElement.offsetWidth);\n\n        this._changeAudiosVolume(volumeValueRatio);\n\n        $volumeValueElement.innerText =\n          (100 * volumeValueRatio).toFixed(0) + \" %\";\n      };\n\n      const onMouseUp = () => {\n        document.removeEventListener(\"mouseup\", onMouseUp);\n        document.removeEventListener(\"mousemove\", onMouseMove);\n      };\n\n      document.addEventListener(\"mousemove\", onMouseMove);\n      document.addEventListener(\"mouseup\", onMouseUp);\n    };\n\n    $thumbElement.ondragstart = () => {\n      return false;\n    };\n  }\n}\n\nexport default WeatherApp;\n","import \"./index.scss\";\nimport summerSound from \"./assets/sounds/summer.mp3\";\nimport rainySound from \"./assets/sounds/rain.mp3\";\nimport winterSound from \"./assets/sounds/winter.mp3\";\nimport WeatherApp from \"./weatherApp\";\n\nconst options = {\n  audioButtons: [\n    {\n      $DOMElement: document.querySelector(\".card_type_sunny\"),\n      audioFile: summerSound,\n      bgClassName: \"sunny-bg\",\n    },\n    {\n      $DOMElement: document.querySelector(\".card_type_rainy\"),\n      audioFile: rainySound,\n      bgClassName: \"rainy-bg\",\n    },\n    {\n      $DOMElement: document.querySelector(\".card_type_winter\"),\n      audioFile: winterSound,\n      bgClassName: \"winter-bg\",\n    },\n  ],\n  $backgroundElement: document.querySelector(\".background\"),\n  $volumeRootElement: document.querySelector(\".volume-container\"),\n};\n\nnew WeatherApp(options);\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","constructor","options","$backgroundElement","$volumeRootElement","audioButtons","forEach","option","push","$DOMElement","audio","Audio","audioFile","bgClassName","isPlaying","_initAudioButtonsClicks","_initVolumeControl","_removeAllBgButtonClasses","console","log","map","audioButton","classList","remove","currentButton","addEventListener","add","pause","filter","otherButton","play","volume","_changeAudiosVolume","newVolume","$volumeElement","querySelector","$volumeFilled","$thumbElement","$volumeValueElement","innerText","onmouseenter","onmouseleave","onmousedown","event","preventDefault","shiftX","clientX","getBoundingClientRect","left","onMouseMove","newLeft","rightEdge","offsetWidth","style","right","volumeValueRatio","toFixed","onMouseUp","removeEventListener","ondragstart","summer","rain","winter"],"sourceRoot":""}